{
  # DO NOT EDIT: This file is managed by fleek. Manual changes will be overwritten.
  description = "{{ .Config.Name }}";

  inputs = {
    # Nixpkgs
    nixpkgs.url = "github:nixos/nixpkgs/{{ .Config.Tracks }}";

    # Home manager
    home-manager.url = "github:nix-community/home-manager";
    home-manager.inputs.nixpkgs.follows = "nixpkgs";

    # Fleek
    fleek.url = "github:ublue-os/fleek";

    # Overlays
    {{ range $index, $element := .Config.Overlays }}
    {{$index}}.url = "{{$element.URL}}";
    {{ if $element.Follow }}{{$index}}.inputs.nixpkgs.follows = "nixpkgs";{{end}}
    {{ end }}

  };

  outputs = { self, nixpkgs, home-manager, fleek, ... }@inputs: {

    # Available through 'home-manager --flake .#your-username@your-hostname'
    {{ $overlays := .Config.Overlays  }}
    homeConfigurations = {
    {{ range .Config.Systems }}
      "{{ .Username }}@{{ .Hostname }}" = home-manager.lib.homeManagerConfiguration {
        pkgs = nixpkgs.legacyPackages.{{ .Arch }}-{{ .OS }}; # Home-manager requires 'pkgs' instance
        extraSpecialArgs = { inherit inputs; }; # Pass flake inputs to our config
        modules = [
          ./home.nix 
          ./path.nix
          ./shell.nix
          ./user.nix
          ./aliases.nix
          ./programs.nix
          # Host Specific configs
          ./{{.Hostname}}/{{.Username}}.nix
          ./{{.Hostname}}/custom.nix
          # self-manage fleek
          ({
           nixpkgs.overlays = [{{ range $index, $element := $overlays }}inputs.{{$index}}.overlay {{ end }}];
          })

        ];
      };
      {{ end }}
    };
  };
}

# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    - ./scripts/man.sh
    - ./scripts/completions.sh

changelog:
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'Bug fixes'
      regexp: '^.*?bug(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: Others
      order: 999

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    ldflags:
      - -w -extldflags "-static"
      - -s -w -X github.com/ublue-os/fleek/internal/build.Version={{.Version}}
      - -s -w -X github.com/ublue-os/fleek/internal/build.Commit={{.Commit}}
      - -s -w -X github.com/ublue-os/fleek/internal/build.CommitDate={{.CommitDate}}
    flags:
      - -tags=netgo
      - -a
    main: ./cmd/fleek/main.go

nightly:
  # Allows you to change the version of the generated nightly release.
  #
  # Note that some pipes require this to be semantic version compliant (nfpm,
  # for example).
  #
  # Default is `{{ incpatch .Version }}-{{ .ShortCommit }}-nightly`.
  name_template: '{{ incpatch .Version }}-dev'

  # Tag name to create if publish_release is enabled.
  #
  # Default is `nightly`
  tag_name: dev

  # Whether to publish a release or not.
  # Only works on GitHub.
  #
  # Default is `false`.
  publish_release: true

  # Whether to delete previous pre-releases for the same `tag_name` when
  # releasing.
  # This allows you to keep a single pre-release.
  #
  # Default is `false`.
  keep_single_release: true


archives:
  - format: tar.gz
    rlcp: true
    files:
      - LICENSE
      - README.md
      - man/**/*
      - completions/*
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
brews:
  - tap:
      owner: ublue-os
      name: homebrew-tap
      token: "{{ .Env.TAP_GITHUB_TOKEN }}"
    folder: Formula
    goarm: "7"
    homepage:  https://getfleek.dev
    description: Own your $HOME
    license: Apache-2.0
    test: |
      system "#{bin}/fleek -v"
    dependencies:
    - name: go
      type: optional
    - name: git

    install: |-
      bin.install "fleek"
      bash_completion.install "completions/fleek.bash" => "fleek"
      zsh_completion.install "completions/fleek.zsh" => "_fleek"
      fish_completion.install "completions/fleek.fish"
      man1.install "man/en/man1/fleek.1.gz"
# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
